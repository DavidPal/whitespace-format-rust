# This workflow is triggered when a tag is pushed to GitHub.
# The workflow creates a new release on GitHub.

name: "Release"

# Only do the release on x.y.z tags on "main" branch.
on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

# We need write permissions on GitHub to create a new release.
permissions:
  contents: write


jobs:

  # Create GitHub release itself.
  # This is a separate step needed before building the artifacts.
  create-github-release:
    name: "Create-release"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get the release version from the tag
        if: env.VERSION == ''
        run: echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
      - name: Show the version
        run: |
          echo "version is: $VERSION"
      - name: Check that tag version and Cargo.toml version are the same
        shell: bash
        run: |
          if ! grep -q "version = \"$VERSION\"" Cargo.toml; then
            echo "version does not match Cargo.toml" >&2
            exit 1
          fi
      - name: Create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create $VERSION --draft --verify-tag --title $VERSION
    outputs:
      version: ${{ env.VERSION }}


  # Build Debian package
  build-release-deb:
    name: Build Debian package
    needs: ["create-github-release"]
    runs-on: ubuntu-latest
    env:
      TARGET: x86_64-unknown-linux-gnu
      VERSION: "${{ needs.create-release.outputs.version }}"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install rust and cargo
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ env.TARGET }}

      - name: Install cargo-deb
        shell: bash
        run: |
          cargo install cargo-deb

      - name: Build .deb file
        shell: bash
        run: |
          cargo deb --target ${{ env.TARGET }}
          version="${{ needs.create-release.outputs.version }}"
          echo "version: $version"
          echo "DEB_DIR=target/${{ env.TARGET }}/debian" >> $GITHUB_ENV
          echo "DEB_NAME=whitespace-format_$version-1_amd64.deb"
          echo "DEB_NAME=whitespace-format_$version-1_amd64.deb" >> $GITHUB_ENV

      - name: Create sha256 sum of .deb file
        shell: bash
        run: |
          cd "$DEB_DIR"
          sum="$DEB_NAME.sha256"
          shasum --algorithm 256 "$DEB_NAME" > "$sum"
          echo "SUM=$sum" >> $GITHUB_ENV

      - name: Upload release archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          cd "$DEB_DIR"
          version="${{ needs.create-release.outputs.version }}"
          echo "version: $version"
          gh release upload "$version" "$DEB_NAME" "$SUM"
